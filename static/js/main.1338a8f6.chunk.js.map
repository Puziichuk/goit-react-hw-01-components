{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Transactions/Transactions.module.css","components/Container/Container.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/Transactions/TransactionsHistory.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","percentage","id","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transaction_history","type","amount","currency","Container","children","container","console","log","user","statisticalData","transactions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1338a8f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"list\":\"Profile_list__2WPV4\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"stat_list\":\"Statistics_stat_list__JUHau\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__1XTLl\",\"item\":\"FriendList_item__-lYix\",\"statusOnline\":\"FriendList_statusOnline__3G94F\",\"statusOffline\":\"FriendList_statusOffline__2D9cJ\",\"avatar\":\"FriendList_avatar__2fiZr\",\"name\":\"FriendList_name__2fvFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"Transactions_transaction_history__kPcGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\n\nimport { BsGeoAlt } from \"react-icons/bs\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>\n        <BsGeoAlt />\n        {location}\n      </p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.stat_list}>\n      {stats.map((stat) => (\n        <li className={styles.item} key={stat.id}>\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FriendList.module.css\";\nimport { GiWorld } from \"react-icons/gi\";\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friend_list}>\n    {friends.map((friend) => (\n      <li className={styles.item} key={friend.id}>\n        <span\n          className={\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\n          }\n        >\n          {\" \"}\n          <GiWorld />\n        </span>\n        <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\n        <p className={styles.name}>{friend.name}</p>\n      </li>\n    ))}\n  </ul>\n);\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Transactions.module.css\";\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transaction_history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map((item) => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  itemss: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n","import React from \"react\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/Transactions/TransactionsHistory\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\nimport Container from \"./components/Container/Container\";\n\nconsole.log(user);\nconsole.log(statisticalData);\nconsole.log(friends);\nconsole.log(transactions);\n\nconst App = () => {\n  return (\n    <>\n      <Container>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n        <FriendList friends={friends} />\n        <TransactionHistory items={transactions} />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport \"modern-normalize/modern-normalize.css\";\n\n// ReactDOM.render(<App/>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// const templete = (\n// <div className=\"profile\">\n//   <div className=\"description\">\n//     <img\n//       src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\"\n//       alt=\"Аватар пользователя\"\n//       className=\"avatar\"\n//     />\n//     <p className=\"name\">Petra Marica</p>\n//     <p className=\"tag\">@pmarica</p>\n//     <p className=\"location\">Salvador, Brasil</p>\n//   </div>\n\n//   <ul className=\"stats\">\n//     <li>\n//       <span className=\"label\">Followers</span>\n//       <span className=\"quantity\">1000</span>\n//     </li>\n//     <li>\n//       <span className=\"label\">Views</span>\n//       <span className=\"quantity\">2000</span>\n//     </li>\n//     <li>\n//       <span className=\"label\">Likes</span>\n//       <span className=\"quantity\">3000</span>\n//     </li>\n//   </ul>\n// </div>\n// );\n\n// ReactDOM.render(templete,\n//   document.getElementById('root')\n// );\n"],"sourceRoot":""}